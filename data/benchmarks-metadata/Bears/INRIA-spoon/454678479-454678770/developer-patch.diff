diff --git a/src/main/java/spoon/support/compiler/jdt/JDTTreeBuilder.java b/src/main/java/spoon/support/compiler/jdt/JDTTreeBuilder.java
index 25e42e2a4..2ee958c02 100644
--- a/src/main/java/spoon/support/compiler/jdt/JDTTreeBuilder.java
+++ b/src/main/java/spoon/support/compiler/jdt/JDTTreeBuilder.java
@@ -56,6 +56,7 @@ import org.eclipse.jdt.internal.compiler.ast.FloatLiteral;
 import org.eclipse.jdt.internal.compiler.ast.ForStatement;
 import org.eclipse.jdt.internal.compiler.ast.ForeachStatement;
 import org.eclipse.jdt.internal.compiler.ast.IfStatement;
+import org.eclipse.jdt.internal.compiler.ast.ImportReference;
 import org.eclipse.jdt.internal.compiler.ast.Initializer;
 import org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression;
 import org.eclipse.jdt.internal.compiler.ast.IntLiteral;
@@ -148,6 +149,7 @@ import spoon.reflect.declaration.CtField;
 import spoon.reflect.declaration.CtMethod;
 import spoon.reflect.declaration.CtModule;
 import spoon.reflect.declaration.CtPackage;
+import spoon.reflect.declaration.CtPackageDeclaration;
 import spoon.reflect.declaration.CtType;
 import spoon.reflect.declaration.CtTypeParameter;
 import spoon.reflect.declaration.ModifierKind;
@@ -787,6 +789,14 @@ public class JDTTreeBuilder extends ASTVisitor {
 		}
 
 		context.compilationUnitSpoon.setDeclaredPackage(getFactory().Package().getOrCreate(CharOperation.toString(scope.currentPackageName), module));
+		CtPackageDeclaration packageDeclaration = context.compilationUnitSpoon.getPackageDeclaration();
+		if (packageDeclaration != null) {
+			ImportReference packageRef = compilationUnitDeclaration.currentPackage;
+			if (packageRef != null) {
+				packageDeclaration.setPosition(factory.Core().createCompoundSourcePosition(
+						context.compilationUnitSpoon, packageRef.sourceStart(), packageRef.sourceEnd(), packageRef.declarationSourceStart, packageRef.declarationEnd, context.compilationUnitSpoon.getLineSeparatorPositions()));
+			}
+		}
 		return true;
 	}
 
diff --git a/src/test/java/spoon/test/position/PositionTest.java b/src/test/java/spoon/test/position/PositionTest.java
index 4c99290ef..1a8b43d1d 100644
--- a/src/test/java/spoon/test/position/PositionTest.java
+++ b/src/test/java/spoon/test/position/PositionTest.java
@@ -47,6 +47,7 @@ import spoon.reflect.declaration.CtEnum;
 import spoon.reflect.declaration.CtField;
 import spoon.reflect.declaration.CtImport;
 import spoon.reflect.declaration.CtMethod;
+import spoon.reflect.declaration.CtPackageDeclaration;
 import spoon.reflect.declaration.CtParameter;
 import spoon.reflect.declaration.CtType;
 import spoon.reflect.declaration.CtTypeParameter;
@@ -1196,4 +1197,13 @@ public class PositionTest {
 			assertEquals("label2: while(true);", contentAtPosition(classContent, stmt3.getPosition()));
 		}
 	}
+	@Test
+	public void testPackageDeclaration() throws Exception {
+		//contract: check position of package declaration
+		final Factory build = build(FooLabel.class);
+		final CtType<FooLabel> foo = build.Type().get(FooLabel.class);
+		String classContent = getClassContent(foo);
+		CtPackageDeclaration packDecl = foo.getPosition().getCompilationUnit().getPackageDeclaration();
+		assertEquals("package spoon.test.position.testclasses;", contentAtPosition(classContent, packDecl.getPosition()));
+	}
 }
