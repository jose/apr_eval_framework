diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/std/StdKeyDeserializer.java b/src/main/java/com/fasterxml/jackson/databind/deser/std/StdKeyDeserializer.java
index d95749a21..8bddce4d7 100644
--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/StdKeyDeserializer.java
+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/StdKeyDeserializer.java
@@ -72,7 +72,7 @@ public class StdKeyDeserializer extends KeyDeserializer
         int kind;
 
         // first common types:
-        if (raw == String.class || raw == Object.class) {
+        if (raw == String.class || raw == Object.class || raw == CharSequence.class) {
             return StringKD.forType(raw);
         } else if (raw == UUID.class) {
             kind = TYPE_UUID;
diff --git a/src/test/java/com/fasterxml/jackson/databind/deser/TestMapDeserialization.java b/src/test/java/com/fasterxml/jackson/databind/deser/TestMapDeserialization.java
index 29ea9efe3..5828bd750 100644
--- a/src/test/java/com/fasterxml/jackson/databind/deser/TestMapDeserialization.java
+++ b/src/test/java/com/fasterxml/jackson/databind/deser/TestMapDeserialization.java
@@ -501,7 +501,15 @@ public class TestMapDeserialization
         assertEquals(1, map.size());
         assertEquals("foo", map.get(String.class));
     }
-    
+
+    public void testcharSequenceKeyMap() throws Exception {
+        String JSON = aposToQuotes("{'a':'b'}");
+        Map<CharSequence,String> result = MAPPER.readValue(JSON, new TypeReference<Map<CharSequence,String>>() { });
+        assertNotNull(result);
+        assertEquals(1, result.size());
+        assertEquals("b", result.get("a"));
+    }
+
     /*
     /**********************************************************
     /* Test methods, annotated Maps
