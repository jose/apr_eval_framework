diff --git a/molgenis-data-csv/src/main/java/org/molgenis/data/csv/CsvIterator.java b/molgenis-data-csv/src/main/java/org/molgenis/data/csv/CsvIterator.java
index a87ffa655..54b2eaf33 100644
--- a/molgenis-data-csv/src/main/java/org/molgenis/data/csv/CsvIterator.java
+++ b/molgenis-data-csv/src/main/java/org/molgenis/data/csv/CsvIterator.java
@@ -228,6 +228,10 @@ public class CsvIterator implements CloseableIterator<Entity>
 		for (int i = 0; i < headers.length; ++i)
 		{
 			String header = processCell(headers[i], true);
+			if (columnIdx.containsKey(header))
+			{
+				throw new MolgenisDataException(format("Duplicate column header '%s' not allowed", header));
+			}
 			columnIdx.put(header, i);
 		}
 
diff --git a/molgenis-data-csv/src/test/java/org/molgenis/data/csv/CsvIteratorTest.java b/molgenis-data-csv/src/test/java/org/molgenis/data/csv/CsvIteratorTest.java
index a329c0dea..3e4bddf87 100644
--- a/molgenis-data-csv/src/test/java/org/molgenis/data/csv/CsvIteratorTest.java
+++ b/molgenis-data-csv/src/test/java/org/molgenis/data/csv/CsvIteratorTest.java
@@ -149,6 +149,21 @@ public class CsvIteratorTest extends AbstractMolgenisSpringTest
 		assertEquals(Iterators.size(it), 5);
 	}
 
+	@Test(expectedExceptions = MolgenisDataException.class, expectedExceptionsMessageRegExp = "Duplicate column header 'col1' not allowed")
+	public void testCsvIteratorDuplicateColumnHeader() throws IOException
+	{
+		File tmpFile = createTmpFileForResource("duplicate-sheet-header.csv");
+		try
+		{
+			new CsvIterator(tmpFile, "duplicate-sheet-header", null, ',', entityType);
+		}
+		finally
+		{
+			//noinspection ResultOfMethodCallIgnored
+			tmpFile.delete();
+		}
+	}
+
 	private File createTmpFileForResource(String fileName) throws IOException
 	{
 		InputStream in = getClass().getResourceAsStream("/" + fileName);
diff --git a/molgenis-data-excel/src/main/java/org/molgenis/data/excel/ExcelRepository.java b/molgenis-data-excel/src/main/java/org/molgenis/data/excel/ExcelRepository.java
index 53c585c89..85bf301b0 100644
--- a/molgenis-data-excel/src/main/java/org/molgenis/data/excel/ExcelRepository.java
+++ b/molgenis-data-excel/src/main/java/org/molgenis/data/excel/ExcelRepository.java
@@ -191,7 +191,16 @@ public class ExcelRepository extends AbstractRepository
 			try
 			{
 				String header = AbstractCellProcessor.processCell(ExcelUtils.toValue(it.next()), true, cellProcessors);
-				if (null != header) columnIdx.put(header, i++);
+				if (header != null)
+				{
+					if (columnIdx.containsKey(header))
+					{
+						throw new MolgenisDataException(
+								format("Duplicate column header '%s' in sheet '%s' not allowed", header,
+										headerRow.getSheet().getSheetName()));
+					}
+					columnIdx.put(header, i++);
+				}
 			}
 			catch (final IllegalStateException ex)
 			{
diff --git a/molgenis-data-excel/src/test/java/org/molgenis/data/excel/ExcelRepositoryTest.java b/molgenis-data-excel/src/test/java/org/molgenis/data/excel/ExcelRepositoryTest.java
index 5c78bfe1e..32d506cd7 100644
--- a/molgenis-data-excel/src/test/java/org/molgenis/data/excel/ExcelRepositoryTest.java
+++ b/molgenis-data-excel/src/test/java/org/molgenis/data/excel/ExcelRepositoryTest.java
@@ -189,6 +189,20 @@ public class ExcelRepositoryTest extends AbstractMolgenisSpringTest
 		it.next(); // does not exist
 	}
 
+	@SuppressWarnings("deprecation")
+	@Test(expectedExceptions = MolgenisDataException.class, expectedExceptionsMessageRegExp = "Duplicate column header 'entity' in sheet 'attributes' not allowed")
+	public void iteratorDuplicateSheetHeader() throws IOException, InvalidFormatException
+	{
+		String fileName = "/duplicate-sheet-header.xlsx";
+		try (InputStream inputStream = getClass().getResourceAsStream(fileName))
+		{
+			Workbook workbook = WorkbookFactory.create(inputStream);
+			ExcelRepository excelRepository = new ExcelRepository(fileName, workbook.getSheet("attributes"),
+					entityTypeFactory, attrMetaFactory);
+			excelRepository.iterator();
+		}
+	}
+
 	@Test
 	public void attributesAndIterator() throws IOException
 	{
