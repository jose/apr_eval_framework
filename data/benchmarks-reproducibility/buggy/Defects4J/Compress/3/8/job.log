PID: 3183227
bicycle.cs.washington.edu
Job started at Sat Dec  9 01:26:15 AM PST 2023
Running checkout, compile, and test under Java-8 on Defects4J::Compress-3. Excluding broken tests? 0. Running on the buggy version? 1.
compile_and_test.py script started at Sat Dec  9 01:26:15 AM PST 2023
No handlers could be found for logger "filelock"
Checking out d170f34f to /tmp/Defects4J_Compress_3_java-8.................. OK
Init local repository...................................................... OK
Tag post-fix revision...................................................... OK
Copy generated Ant build file.............................................. OK
Run post-checkout hook..................................................... OK
Excluding broken/flaky tests............................................... OK
Excluding broken/flaky tests............................................... OK
Initialize fixed program version........................................... OK
Apply patch................................................................ OK
Initialize buggy program version........................................... OK
Diff d170f34f:ddbd61f0..................................................... OK
Apply patch................................................................ OK
Tag pre-fix revision....................................................... OK
Check out program version: Compress-3b..................................... OK
Checkout Defects4J_Compress_3
Compile Defects4J_Compress_3
Run tests on Defects4J_Compress_3
All tests:
testCompareBA(org.apache.commons.compress.ArchiveUtilsTest)
testAsciiConversions(org.apache.commons.compress.ArchiveUtilsTest)
testCompareAscii(org.apache.commons.compress.ArchiveUtilsTest)
testDetection(org.apache.commons.compress.DetectArchiverTestCase)
testEmptyJarArchive(org.apache.commons.compress.DetectArchiverTestCase)
testEmptyZipArchive(org.apache.commons.compress.DetectArchiverTestCase)
testEmptyCpioArchive(org.apache.commons.compress.DetectArchiverTestCase)
testDetection(org.apache.commons.compress.DetectCompressorTestCase)
testWriteJar(org.apache.commons.compress.IOMethodsTest)
testWriteTar(org.apache.commons.compress.IOMethodsTest)
testWriteZip(org.apache.commons.compress.IOMethodsTest)
testWriteCpio(org.apache.commons.compress.IOMethodsTest)
testReadCpio(org.apache.commons.compress.IOMethodsTest)
testReadJar(org.apache.commons.compress.IOMethodsTest)
testReadTar(org.apache.commons.compress.IOMethodsTest)
testReadZip(org.apache.commons.compress.IOMethodsTest)
testWriteAr(org.apache.commons.compress.IOMethodsTest)
testReadAr(org.apache.commons.compress.IOMethodsTest)
testArDelete(org.apache.commons.compress.archivers.ArTestCase)
testArUnarchive(org.apache.commons.compress.archivers.ArTestCase)
testArArchiveCreation(org.apache.commons.compress.archivers.ArTestCase)
testFinish(org.apache.commons.compress.archivers.ArchiveOutputStreamTest)
testCpioUnarchive(org.apache.commons.compress.archivers.CpioTestCase)
testCpioArchiveCreation(org.apache.commons.compress.archivers.CpioTestCase)
testJarUnarchive(org.apache.commons.compress.archivers.JarTestCase)
testJarArchiveCreation(org.apache.commons.compress.archivers.JarTestCase)
testJarUnarchiveAll(org.apache.commons.compress.archivers.JarTestCase)
testTarUnarchive(org.apache.commons.compress.archivers.TarTestCase)
testTarArchiveLongNameCreation(org.apache.commons.compress.archivers.TarTestCase)
testTarArchiveCreation(org.apache.commons.compress.archivers.TarTestCase)
testZipUnarchive(org.apache.commons.compress.archivers.ZipTestCase)
testListAllFilesWithNestedArchive(org.apache.commons.compress.archivers.ZipTestCase)
testZipArchiveCreation(org.apache.commons.compress.archivers.ZipTestCase)
testCpioUnarchive(org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest)
testJarMarker(org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest)
testReading(org.apache.commons.compress.archivers.memory.MemoryArchiveTestCase)
testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)
testFileSystemRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)
testMaxFileSize(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)
testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)
testName(org.apache.commons.compress.archivers.tar.TarUtilsTest)
testRoundTripOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)
testOverflow(org.apache.commons.compress.archivers.tar.TarUtilsTest)
testNegative(org.apache.commons.compress.archivers.tar.TarUtilsTest)
testTrailers(org.apache.commons.compress.archivers.tar.TarUtilsTest)
testClone(org.apache.commons.compress.archivers.zip.AsiExtraFieldTest)
testModes(org.apache.commons.compress.archivers.zip.AsiExtraFieldTest)
testContent(org.apache.commons.compress.archivers.zip.AsiExtraFieldTest)
testReparse(org.apache.commons.compress.archivers.zip.AsiExtraFieldTest)
testMerge(org.apache.commons.compress.archivers.zip.ExtraFieldUtilsTest)
testParse(org.apache.commons.compress.archivers.zip.ExtraFieldUtilsTest)
testNioCp1252Encoding(org.apache.commons.compress.archivers.zip.TestZipEncodings)
testSimpleCp437Encoding(org.apache.commons.compress.archivers.zip.TestZipEncodings)
testSimpleCp850Encoding(org.apache.commons.compress.archivers.zip.TestZipEncodings)
testZipFileReadsUnicodeFields(org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest)
testCP437FileRoundtripImplicitUnicodeExtra(org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest)
testUtf8FileRoundtripImplicitUnicodeExtra(org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest)
testRead7ZipArchiveForStream(org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest)
testCP437FileRoundtripExplicitUnicodeExtra(org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest)
testRead7ZipArchive(org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest)
testUtf8FileRoundtripExplicitUnicodeExtra(org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest)
testASCIIFileRoundtripImplicitUnicodeExtra(org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest)
testReadWinZipArchiveForStream(org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest)
testUtf8FileRoundtripNoEFSImplicitUnicodeExtra(org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest)
testZipArchiveInputStreamReadsUnicodeFields(org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest)
testASCIIFileRoundtripExplicitUnicodeExtra(org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest)
testReadWinZipArchive(org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest)
testUtf8FileRoundtripNoEFSExplicitUnicodeExtra(org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest)
testUtf8Interoperability(org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest)
testExtraFieldMerging(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)
testExtraFields(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)
testUnixMode(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)
testAddAsFirstExtraField(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)
testToBytes(org.apache.commons.compress.archivers.zip.ZipLongTest)
testClone(org.apache.commons.compress.archivers.zip.ZipLongTest)
testSign(org.apache.commons.compress.archivers.zip.ZipLongTest)
testFromBytes(org.apache.commons.compress.archivers.zip.ZipLongTest)
testEquals(org.apache.commons.compress.archivers.zip.ZipLongTest)
testToBytes(org.apache.commons.compress.archivers.zip.ZipShortTest)
testClone(org.apache.commons.compress.archivers.zip.ZipShortTest)
testSign(org.apache.commons.compress.archivers.zip.ZipShortTest)
testFromBytes(org.apache.commons.compress.archivers.zip.ZipShortTest)
testEquals(org.apache.commons.compress.archivers.zip.ZipShortTest)
testZipLong(org.apache.commons.compress.archivers.zip.ZipUtilTest)
testMinTime(org.apache.commons.compress.archivers.zip.ZipUtilTest)
testAdjustToLong(org.apache.commons.compress.archivers.zip.ZipUtilTest)
testDeleteFile2(org.apache.commons.compress.changes.ChangeSetTestCase)
testAddDeleteToOneFileArchive(org.apache.commons.compress.changes.ChangeSetTestCase)
testAddToEmptyArchive(org.apache.commons.compress.changes.ChangeSetTestCase)
testRenameAndDelete(org.apache.commons.compress.changes.ChangeSetTestCase)
testDeleteAddToOneFileArchive(org.apache.commons.compress.changes.ChangeSetTestCase)
testAddAllreadyExistingWithReplaceFalse(org.apache.commons.compress.changes.ChangeSetTestCase)
testChangeSetResults(org.apache.commons.compress.changes.ChangeSetTestCase)
testDeleteFromAndAddToAr(org.apache.commons.compress.changes.ChangeSetTestCase)
testAddMoveDelete(org.apache.commons.compress.changes.ChangeSetTestCase)
testDeleteFromAr(org.apache.commons.compress.changes.ChangeSetTestCase)
testDeleteAddDelete(org.apache.commons.compress.changes.ChangeSetTestCase)
testDeleteDir(org.apache.commons.compress.changes.ChangeSetTestCase)
testAddDeleteAdd(org.apache.commons.compress.changes.ChangeSetTestCase)
testAddChangeTwiceWithoutReplace(org.apache.commons.compress.changes.ChangeSetTestCase)
testDeletePlusAddSame(org.apache.commons.compress.changes.ChangeSetTestCase)
testDeleteDir2(org.apache.commons.compress.changes.ChangeSetTestCase)
testDeleteDir3(org.apache.commons.compress.changes.ChangeSetTestCase)
testDeleteFile(org.apache.commons.compress.changes.ChangeSetTestCase)
testAddAllreadyExistingWithReplaceTrue(org.apache.commons.compress.changes.ChangeSetTestCase)
testDeleteFromJar(org.apache.commons.compress.changes.ChangeSetTestCase)
testDeleteFromTar(org.apache.commons.compress.changes.ChangeSetTestCase)
testDeleteFromZip(org.apache.commons.compress.changes.ChangeSetTestCase)
testDeletePlusAdd(org.apache.commons.compress.changes.ChangeSetTestCase)
testDeleteFromAndAddToJar(org.apache.commons.compress.changes.ChangeSetTestCase)
testDeleteFromAndAddToTar(org.apache.commons.compress.changes.ChangeSetTestCase)
testDeleteFromAndAddToZip(org.apache.commons.compress.changes.ChangeSetTestCase)
testAddChangeTwice(org.apache.commons.compress.changes.ChangeSetTestCase)
testBzip2Unarchive(org.apache.commons.compress.compressors.BZip2TestCase)
testBzipCreation(org.apache.commons.compress.compressors.BZip2TestCase)
testGzipUnarchive(org.apache.commons.compress.compressors.GZipTestCase)
testGzipCreation(org.apache.commons.compress.compressors.GZipTestCase)
testGetCompressedFilename(org.apache.commons.compress.compressors.GzipUtilsTestCase)
testIsCompressedFilename(org.apache.commons.compress.compressors.GzipUtilsTestCase)
testGetUncompressedFilename(org.apache.commons.compress.compressors.GzipUtilsTestCase)

Failing tests:
--- org.apache.commons.compress.archivers.ArchiveOutputStreamTest::testFinish
junit.framework.AssertionFailedError: After putArchive should follow closeArchive
	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.TestCase.fail(TestCase.java:227)
	at org.apache.commons.compress.archivers.ArchiveOutputStreamTest.testFinish(ArchiveOutputStreamTest.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)

/scratch/jose/repair-them-all/apr_eval_framework/data/benchmarks-reproducibility/checkout_and_compile_and_metadata_and_test.py script finished at Sat Dec  9 01:26:50 AM PST 2023
Job finished at Sat Dec  9 01:26:50 AM PST 2023
DONE!
