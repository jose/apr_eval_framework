Only in src/main/java/org/jsoup/nodes: PseudoTextElement.java
--- src/main/java/org/jsoup/select/Evaluator.java	2023-12-05 21:19:27.522672507 +0000
+++ src/main/java/org/jsoup/select/Evaluator.java	2023-12-05 21:19:30.544471905 +0000
@@ -6,6 +6,8 @@
 import org.jsoup.nodes.DocumentType;
 import org.jsoup.nodes.Element;
 import org.jsoup.nodes.Node;
+import org.jsoup.nodes.PseudoTextElement;
+import org.jsoup.nodes.TextNode;
 import org.jsoup.nodes.XmlDeclaration;
 
 import java.util.List;
@@ -751,6 +753,26 @@
         }
     }
 
+    public static final class MatchText extends Evaluator {
 
+        @Override
+        public boolean matches(Element root, Element element) {
+            if (element instanceof PseudoTextElement)
+                return true;
+
+            List<TextNode> textNodes = element.textNodes();
+            for (TextNode textNode : textNodes) {
+                PseudoTextElement pel = new PseudoTextElement(
+                    org.jsoup.parser.Tag.valueOf(element.tagName()), element.baseUri(), element.attributes());
+                textNode.replaceWith(pel);
+                pel.appendChild(textNode);
+            }
+            return false;
+        }
 
+        @Override
+        public String toString() {
+            return ":matchText";
+        }
+    }
 }
--- src/main/java/org/jsoup/select/QueryParser.java	2023-12-05 21:19:27.523006965 +0000
+++ src/main/java/org/jsoup/select/QueryParser.java	2023-12-05 21:19:30.544791244 +0000
@@ -200,6 +200,8 @@
         	evals.add(new Evaluator.IsEmpty());
         else if (tq.matchChomp(":root"))
         	evals.add(new Evaluator.IsRoot());
+        else if (tq.matchChomp(":matchText"))
+            evals.add(new Evaluator.MatchText());
 		else // unhandled
             throw new Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());
 
