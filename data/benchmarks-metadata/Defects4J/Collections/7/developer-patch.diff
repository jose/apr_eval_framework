--- src/java/org/apache/commons/collections/ExtendedProperties.java	2024-07-18 03:48:19.593089113 -0700
+++ src/java/org/apache/commons/collections/ExtendedProperties.java	2024-07-18 03:48:22.373201741 -0700
@@ -640,7 +640,7 @@
      */
     public Object getProperty(String key) {
         // first, try to get from the 'user value' store
-        Object obj = this.get(key);
+        Object obj = super.get(key);
 
         if (obj == null) {
             // if there isn't a value there, get it from the
@@ -706,7 +706,7 @@
         if (!containsKey(key)) {
             keysAsListed.add(key);
         }
-        put(key, value);
+        super.put(key, value);
     }
 
     /**
@@ -728,7 +728,7 @@
             List values = new Vector(2);
             values.add(current);
             values.add(value);
-            put(key, values);
+            super.put(key, values);
             
         } else if (current instanceof List) {
             // already a list - just add the new token
@@ -739,7 +739,7 @@
             if (!containsKey(key)) {
                 keysAsListed.add(key);
             }
-            put(key, value);
+            super.put(key, value);
         }
     }
 
@@ -832,7 +832,7 @@
                     break;
                 }
             }
-            remove(key);
+            super.remove(key);
         }
     }
 
@@ -1091,7 +1091,7 @@
         } else if (value instanceof String) {
             Vector values = new Vector(1);
             values.add(value);
-            put(key, values);
+            super.put(key, values);
             return values;
             
         } else if (value == null) {
@@ -1143,7 +1143,7 @@
         } else if (value instanceof String) {
             List values = new ArrayList(1);
             values.add(value);
-            put(key, values);
+            super.put(key, values);
             return values;
             
         } else if (value == null) {
@@ -1209,7 +1209,7 @@
         } else if (value instanceof String) {
             String s = testBoolean((String) value);
             Boolean b = new Boolean(s);
-            put(key, b);
+            super.put(key, b);
             return b;
             
         } else if (value == null) {
@@ -1303,7 +1303,7 @@
             
         } else if (value instanceof String) {
             Byte b = new Byte((String) value);
-            put(key, b);
+            super.put(key, b);
             return b;
             
         } else if (value == null) {
@@ -1373,7 +1373,7 @@
             
         } else if (value instanceof String) {
             Short s = new Short((String) value);
-            put(key, s);
+            super.put(key, s);
             return s;
             
         } else if (value == null) {
@@ -1471,7 +1471,7 @@
             
         } else if (value instanceof String) {
             Integer i = new Integer((String) value);
-            put(key, i);
+            super.put(key, i);
             return i;
             
         } else if (value == null) {
@@ -1541,7 +1541,7 @@
             
         } else if (value instanceof String) {
             Long l = new Long((String) value);
-            put(key, l);
+            super.put(key, l);
             return l;
             
         } else if (value == null) {
@@ -1611,7 +1611,7 @@
             
         } else if (value instanceof String) {
             Float f = new Float((String) value);
-            put(key, f);
+            super.put(key, f);
             return f;
             
         } else if (value == null) {
@@ -1681,7 +1681,7 @@
             
         } else if (value instanceof String) {
             Double d = new Double((String) value);
-            put(key, d);
+            super.put(key, d);
             return d;
             
         } else if (value == null) {
@@ -1723,6 +1723,12 @@
      * @param value for the property
      * @return old value of the property
      */
+    public Object put(Object key, Object value) {
+        String strKey = String.valueOf(key);
+        Object ret = getProperty(strKey);
+        addProperty(strKey, value);
+        return ret;
+    }
 
     /**
      * Add a map full of key/value pairs to the ExtendedProperties. 
@@ -1753,5 +1759,11 @@
      * @param key specifying the property
      * @return old value of the property
      */
+    public Object remove(Object key) {
+        String strKey = String.valueOf(key);
+        Object ret = getProperty(strKey);
+        clearProperty(strKey);
+        return ret;
+    }
 
 }
