diff --git a/seeds-core/src/main/java/com/github/smallcreep/cucumber/seeds/context/CxJoined.java b/seeds-core/src/main/java/com/github/smallcreep/cucumber/seeds/context/CxJoined.java
index f18fd1399..8d1e4c9dc 100644
--- a/seeds-core/src/main/java/com/github/smallcreep/cucumber/seeds/context/CxJoined.java
+++ b/seeds-core/src/main/java/com/github/smallcreep/cucumber/seeds/context/CxJoined.java
@@ -63,7 +63,7 @@ public final class CxJoined implements Context {
      * Ctor.
      * @param contexts Contexts
      */
-    CxJoined(final Iterable<Context> contexts) {
+    public CxJoined(final Iterable<Context> contexts) {
         this(contexts, new CxSimple());
     }
 
diff --git a/seeds-core/src/main/java/com/github/smallcreep/cucumber/seeds/suit/StDefault.java b/seeds-core/src/main/java/com/github/smallcreep/cucumber/seeds/suit/StDefault.java
index b2ad0f95d..a2d3aee77 100644
--- a/seeds-core/src/main/java/com/github/smallcreep/cucumber/seeds/suit/StDefault.java
+++ b/seeds-core/src/main/java/com/github/smallcreep/cucumber/seeds/suit/StDefault.java
@@ -24,9 +24,12 @@
 
 package com.github.smallcreep.cucumber.seeds.suit;
 
+import com.github.smallcreep.cucumber.seeds.Context;
 import com.github.smallcreep.cucumber.seeds.Suit;
 import com.github.smallcreep.cucumber.seeds.context.CxJoined;
 import com.github.smallcreep.cucumber.seeds.context.CxProperties;
+import org.cactoos.iterable.IterableOf;
+import org.cactoos.iterable.Joined;
 
 /**
  * Default suit.
@@ -39,20 +42,38 @@ public final class StDefault extends StEnvelope {
      * @param origin Origin suit
      */
     public StDefault(final Suit origin) {
-        this(origin, new CxProperties());
+        this(
+            origin,
+            new CxProperties(System.getProperties()),
+            new CxProperties()
+        );
+    }
+
+    /**
+     * Ctor.
+     * @param origin Origin suit
+     * @param ctxs Contexts
+     */
+    StDefault(final Suit origin, final Context... ctxs) {
+        this(
+            origin,
+            new IterableOf<>(ctxs)
+        );
     }
 
     /**
      * Ctor.
      * @param origin Origin suit
-     * @param ctx Properties context
+     * @param ctxs Contexts
      */
-    StDefault(final Suit origin, final CxProperties ctx) {
+    StDefault(final Suit origin, final Iterable<Context> ctxs) {
         this(
             origin,
             new CxJoined(
-                ctx,
-                origin.context()
+                new Joined<>(
+                    origin.context(),
+                    ctxs
+                )
             )
         );
     }
diff --git a/seeds-core/src/test/java/com/github/smallcreep/cucumber/seeds/suit/StDefaultTest.java b/seeds-core/src/test/java/com/github/smallcreep/cucumber/seeds/suit/StDefaultTest.java
index 511175222..8e8668bbe 100644
--- a/seeds-core/src/test/java/com/github/smallcreep/cucumber/seeds/suit/StDefaultTest.java
+++ b/seeds-core/src/test/java/com/github/smallcreep/cucumber/seeds/suit/StDefaultTest.java
@@ -24,6 +24,8 @@
 
 package com.github.smallcreep.cucumber.seeds.suit;
 
+import com.github.smallcreep.cucumber.seeds.context.CxSimple;
+import org.cactoos.map.MapOf;
 import org.hamcrest.CoreMatchers;
 import org.hamcrest.MatcherAssert;
 import org.junit.Test;
@@ -48,4 +50,24 @@ public class StDefaultTest {
             )
         );
     }
+
+    /**
+     * Check System Properties overridden properties from file.
+     */
+    @Test
+    public void checkSystemPropertiesOverriddenInContext() {
+        final String value = "overridden";
+        final String key = "test.prop";
+        System.getProperties().put(key, value);
+        MatcherAssert.assertThat(
+            new StDefault(
+                new StSmart(
+                    new CxSimple(
+                        new MapOf<String, Object>()
+                    )
+                )
+            ).context().value(key),
+            CoreMatchers.equalTo(value)
+        );
+    }
 }
