diff --git a/src/main/java/spoon/support/compiler/SpoonPom.java b/src/main/java/spoon/support/compiler/SpoonPom.java
index 55d992ca8..7d6cdb9a7 100644
--- a/src/main/java/spoon/support/compiler/SpoonPom.java
+++ b/src/main/java/spoon/support/compiler/SpoonPom.java
@@ -256,7 +256,7 @@ public class SpoonPom implements SpoonResource {
 			javaVersion = getSourceVersion(model.getBuild());
 		}
 		if (javaVersion != null) {
-			return Integer.parseInt(extractVariable(javaVersion).substring(2));
+			return correctJavaVersion(javaVersion);
 		}
 		for (Profile profile: model.getProfiles()) {
 			if (profile.getActivation() != null && profile.getActivation().isActiveByDefault()) {
@@ -264,28 +264,33 @@ public class SpoonPom implements SpoonResource {
 			}
 		}
 		if (javaVersion != null) {
-			return Integer.parseInt(extractVariable(javaVersion).substring(2));
+			return correctJavaVersion(javaVersion);
 		}
 		javaVersion = getProperty("java.version");
 		if (javaVersion != null) {
-			return Integer.parseInt(extractVariable(javaVersion).substring(2));
+			return correctJavaVersion(javaVersion);
 		}
 		javaVersion = getProperty("java.src.version");
 		if (javaVersion != null) {
-			return Integer.parseInt(extractVariable(javaVersion).substring(2));
+			return correctJavaVersion(javaVersion);
 		}
 		javaVersion = getProperty("maven.compiler.source");
 		if (javaVersion != null) {
-			return Integer.parseInt(extractVariable(javaVersion).substring(2));
+			return correctJavaVersion(javaVersion);
 		}
 		javaVersion = getProperty("maven.compile.source");
 		if (javaVersion != null) {
-			return Integer.parseInt(extractVariable(javaVersion).substring(2));
+			return correctJavaVersion(javaVersion);
 		}
 		// return the current compliance level of spoon
 		return environment.getComplianceLevel();
 	}
 
+	private int correctJavaVersion(String javaVersion) {
+		String version = extractVariable(javaVersion);
+		return Integer.parseInt((version.contains(".") ? version.substring(2) : version));
+	}
+
 	private String getSourceVersion(BuildBase build) {
 		for (Plugin plugin : build.getPlugins()) {
 			if (!"maven-compiler-plugin".equals(plugin.getArtifactId())) {
diff --git a/src/test/java/spoon/MavenLauncherTest.java b/src/test/java/spoon/MavenLauncherTest.java
index 4eb00ce84..342e9001b 100644
--- a/src/test/java/spoon/MavenLauncherTest.java
+++ b/src/test/java/spoon/MavenLauncherTest.java
@@ -107,6 +107,10 @@ public class MavenLauncherTest {
 		launcher = new MavenLauncher("./pom.xml", MavenLauncher.SOURCE_TYPE.APP_SOURCE);
 		assertEquals(8, launcher.getEnvironment().getComplianceLevel());
 
+		// specify the pom.xml
+		launcher = new MavenLauncher("./src/test/resources/maven-launcher/java-11/pom.xml", MavenLauncher.SOURCE_TYPE.APP_SOURCE);
+		assertEquals(11, launcher.getEnvironment().getComplianceLevel());
+
 		// without calling maven to generate classpath
 		launcher = new MavenLauncher("./pom.xml", MavenLauncher.SOURCE_TYPE.APP_SOURCE, new String[]{});
 		assertEquals(0, launcher.getEnvironment().getSourceClasspath().length);
