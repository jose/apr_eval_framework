diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/std/FromStringDeserializer.java b/src/main/java/com/fasterxml/jackson/databind/deser/std/FromStringDeserializer.java
index 102e0e3f2..0d01e780a 100644
--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/FromStringDeserializer.java
+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/FromStringDeserializer.java
@@ -13,6 +13,7 @@ import java.util.TimeZone;
 import java.util.regex.Pattern;
 
 import com.fasterxml.jackson.core.*;
+import com.fasterxml.jackson.core.util.VersionUtil;
 import com.fasterxml.jackson.databind.DeserializationContext;
 import com.fasterxml.jackson.databind.JavaType;
 import com.fasterxml.jackson.databind.JsonMappingException;
@@ -112,10 +113,10 @@ public abstract class FromStringDeserializer<T> extends StdScalarDeserializer<T>
             }
             Exception cause = null;
             try {
-                T result = _deserialize(text, ctxt);
-                if (result != null) {
-                    return result;
-                }
+                // 19-May-2017, tatu: Used to require non-null result (assuming `null`
+                //    indicated error; but that seems wrong. Should be able to return
+                //    `null` as value.
+                return _deserialize(text, ctxt);
             } catch (IllegalArgumentException iae) {
                 cause = iae;
             } catch (MalformedURLException me) {
@@ -277,7 +278,8 @@ public abstract class FromStringDeserializer<T> extends StdScalarDeserializer<T>
             case STD_STRING_BUILDER:
                 return new StringBuilder(value);
             }
-            throw new IllegalArgumentException();
+            VersionUtil.throwInternal();
+            return null;
         }
 
         @Override
diff --git a/src/test/java/com/fasterxml/jackson/databind/filter/ProblemHandlerTest.java b/src/test/java/com/fasterxml/jackson/databind/filter/ProblemHandlerTest.java
index 82ab7807a..1a9f396f9 100644
--- a/src/test/java/com/fasterxml/jackson/databind/filter/ProblemHandlerTest.java
+++ b/src/test/java/com/fasterxml/jackson/databind/filter/ProblemHandlerTest.java
@@ -242,11 +242,10 @@ public class ProblemHandlerTest extends BaseMapTest
         assertEquals(SingleValuedEnum.A, result);
 
         // also, write [databind#1629] try this
-        UUID defaultUUID = UUID.nameUUIDFromBytes("abc".getBytes());
         mapper = new ObjectMapper()
-                .addHandler(new WeirdStringHandler(defaultUUID));
+                .addHandler(new WeirdStringHandler(null));
         UUID result2 = mapper.readValue(quote("not a uuid!"), UUID.class);
-        assertEquals(defaultUUID, result2);
+        assertNull(result2);
     }
 
     public void testInvalidTypeId() throws Exception
