--- src/main/java/com/fasterxml/jackson/databind/deser/std/StdKeyDeserializer.java	2024-07-18 04:05:18.706876428 -0700
+++ src/main/java/com/fasterxml/jackson/databind/deser/std/StdKeyDeserializer.java	2024-07-18 04:05:20.748960395 -0700
@@ -125,7 +125,8 @@
                 return result;
             }
         } catch (Exception re) {
-            return ctxt.handleWeirdKey(_keyClass, key, "not a valid representation, problem: %s", re.getMessage());
+            return ctxt.handleWeirdKey(_keyClass, key, "not a valid representation, problem: (%s) %s",
+                    re.getClass().getName(), re.getMessage());
         }
         if (_keyClass.isEnum() && ctxt.getConfig().isEnabled(DeserializationFeature.READ_UNKNOWN_ENUM_VALUES_AS_NULL)) {
             return null;
--- src/main/java/com/fasterxml/jackson/databind/introspect/BasicBeanDescription.java	2024-07-18 04:05:18.767878936 -0700
+++ src/main/java/com/fasterxml/jackson/databind/introspect/BasicBeanDescription.java	2024-07-18 04:05:20.748960395 -0700
@@ -522,7 +522,7 @@
         // So, of all single-arg static methods:
         for (AnnotatedMethod am : _classInfo.getStaticMethods()) {
             // 24-Oct-2016, tatu: Better ensure it only takes 1 arg, no matter what
-            if (isFactoryMethod(am)) {
+            if (isFactoryMethod(am) && am.getParameterCount() == 1) {
                 // And must take one of expected arg types (or supertype)
                 Class<?> actualArgType = am.getRawParameterType(0);
                 for (Class<?> expArgType : expArgTypes) {
@@ -555,7 +555,9 @@
         final String name = am.getName();
         // 24-Oct-2016, tatu: As per [databind#1429] must ensure takes exactly one arg
         if ("valueOf".equals(name)) {
+            if (am.getParameterCount() == 1) {
                 return true;
+            }
         }
         // [databind#208] Also accept "fromString()", if takes String or CharSequence
         if ("fromString".equals(name)) {
