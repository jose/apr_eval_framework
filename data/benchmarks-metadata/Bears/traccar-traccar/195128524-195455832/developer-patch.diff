diff --git a/src/org/traccar/events/IgnitionEventHandler.java b/src/org/traccar/events/IgnitionEventHandler.java
index 8464c3aef..187b7ce73 100644
--- a/src/org/traccar/events/IgnitionEventHandler.java
+++ b/src/org/traccar/events/IgnitionEventHandler.java
@@ -39,20 +39,21 @@ public class IgnitionEventHandler extends BaseEventHandler {
 
         Collection<Event> result = null;
 
-        boolean ignition = position.getBoolean(Position.KEY_IGNITION);
-
-        boolean oldIgnition = false;
-        Position lastPosition = Context.getIdentityManager().getLastPosition(position.getDeviceId());
-        if (lastPosition != null) {
-            oldIgnition = lastPosition.getBoolean(Position.KEY_IGNITION);
-        }
-
-        if (ignition && !oldIgnition) {
-            result = Collections.singleton(
-                    new Event(Event.TYPE_IGNITION_ON, position.getDeviceId(), position.getId()));
-        } else if (!ignition && oldIgnition) {
-            result = Collections.singleton(
-                    new Event(Event.TYPE_IGNITION_OFF, position.getDeviceId(), position.getId()));
+        if (position.getAttributes().containsKey(Position.KEY_IGNITION)) {
+            boolean ignition = position.getBoolean(Position.KEY_IGNITION);
+
+            Position lastPosition = Context.getIdentityManager().getLastPosition(position.getDeviceId());
+            if (lastPosition != null && lastPosition.getAttributes().containsKey(Position.KEY_IGNITION)) {
+                boolean oldIgnition = lastPosition.getBoolean(Position.KEY_IGNITION);
+
+                if (ignition && !oldIgnition) {
+                    result = Collections.singleton(
+                            new Event(Event.TYPE_IGNITION_ON, position.getDeviceId(), position.getId()));
+                } else if (!ignition && oldIgnition) {
+                    result = Collections.singleton(
+                            new Event(Event.TYPE_IGNITION_OFF, position.getDeviceId(), position.getId()));
+                }
+            }
         }
         return result;
     }
diff --git a/test/org/traccar/events/IgnitionEventHandlerTest.java b/test/org/traccar/events/IgnitionEventHandlerTest.java
index ad329d139..d6c348c77 100644
--- a/test/org/traccar/events/IgnitionEventHandlerTest.java
+++ b/test/org/traccar/events/IgnitionEventHandlerTest.java
@@ -1,7 +1,6 @@
 package org.traccar.events;
 
 import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.assertNotNull;
 
 import java.util.Collection;
 
@@ -21,9 +20,7 @@ public class IgnitionEventHandlerTest extends BaseTest {
         position.set(Position.KEY_IGNITION, true);
         position.setValid(true);
         Collection<Event> events = ignitionEventHandler.analyzePosition(position);
-        assertNotNull(events);
-        Event event = (Event) events.toArray()[0];
-        assertEquals(Event.TYPE_IGNITION_ON, event.getType());
+        assertEquals(events, null);
     }
 
 }
