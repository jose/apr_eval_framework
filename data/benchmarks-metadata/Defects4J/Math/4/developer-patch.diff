--- src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	2023-12-05 17:04:56.939086694 +0000
+++ src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java	2023-12-05 17:05:01.937876251 +0000
@@ -111,6 +111,9 @@
 
         // compute the intersection on infinite line
         Vector3D v1D = line.intersection(subLine.line);
+        if (v1D == null) {
+            return null;
+        }
 
         // check location of point with respect to first sub-line
         Location loc1 = remainingRegion.checkPoint(line.toSubSpace(v1D));
--- src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	2023-12-05 17:04:56.939215244 +0000
+++ src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine.java	2023-12-05 17:05:01.938261967 +0000
@@ -115,6 +115,9 @@
 
         // compute the intersection on infinite line
         Vector2D v2D = line1.intersection(line2);
+        if (v2D == null) {
+            return null;
+        }
 
         // check location of point with respect to first sub-line
         Location loc1 = getRemainingRegion().checkPoint(line1.toSubSpace(v2D));
