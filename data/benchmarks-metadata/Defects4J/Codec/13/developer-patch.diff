Only in src/main/java/org/apache/commons/codec/binary: CharSequenceUtils.java
--- src/main/java/org/apache/commons/codec/binary/StringUtils.java	2023-12-05 20:06:41.829898725 +0000
+++ src/main/java/org/apache/commons/codec/binary/StringUtils.java	2023-12-05 20:06:42.850895522 +0000
@@ -67,6 +67,18 @@
      * @return {@code true} if the CharSequences are equal (case-sensitive), or both {@code null}
      * @since 1.10
      */
+    public static boolean equals(final CharSequence cs1, final CharSequence cs2) {
+        if (cs1 == cs2) {
+            return true;
+        }
+        if (cs1 == null || cs2 == null) {
+            return false;
+        }
+        if (cs1 instanceof String && cs2 instanceof String) {
+            return cs1.equals(cs2);
+        }
+        return CharSequenceUtils.regionMatches(cs1, false, 0, cs2, 0, Math.max(cs1.length(), cs2.length()));
+    }
 
     /**
      * Calls {@link String#getBytes(Charset)}
--- src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	2023-12-05 20:06:41.709050464 +0000
+++ src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java	2023-12-05 20:06:42.851444563 +0000
@@ -19,6 +19,7 @@
 
 import org.apache.commons.codec.EncoderException;
 import org.apache.commons.codec.StringEncoder;
+import org.apache.commons.codec.binary.StringUtils;
 
 /**
  * Encodes a string into a double metaphone value. This Implementation is based on the algorithm by <CITE>Lawrence
@@ -241,7 +242,7 @@
      *          {@code false} otherwise.
      */
     public boolean isDoubleMetaphoneEqual(final String value1, final String value2, final boolean alternate) {
-        return doubleMetaphone(value1, alternate).equals(doubleMetaphone(value2, alternate));
+        return StringUtils.equals(doubleMetaphone(value1, alternate), doubleMetaphone(value2, alternate));
     }
 
     /**
