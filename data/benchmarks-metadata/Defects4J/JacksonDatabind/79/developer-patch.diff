--- src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java	2023-12-05 21:09:49.459510101 +0000
+++ src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java	2023-12-05 21:09:52.191974025 +0000
@@ -576,10 +576,13 @@
     @Override
     public ObjectIdInfo findObjectReferenceInfo(Annotated ann, ObjectIdInfo objectIdInfo) {
         JsonIdentityReference ref = _findAnnotation(ann, JsonIdentityReference.class);
-        if (ref != null) {
-            objectIdInfo = objectIdInfo.withAlwaysAsId(ref.alwaysAsId());
+        if (ref == null) {
+            return objectIdInfo;
         }
-        return objectIdInfo;
+        if (objectIdInfo == null) {
+            objectIdInfo = ObjectIdInfo.empty();
+        }
+        return objectIdInfo.withAlwaysAsId(ref.alwaysAsId());
     }
 
     /*
--- src/main/java/com/fasterxml/jackson/databind/introspect/ObjectIdInfo.java	2023-12-05 21:09:49.578836855 +0000
+++ src/main/java/com/fasterxml/jackson/databind/introspect/ObjectIdInfo.java	2023-12-05 21:09:52.192345856 +0000
@@ -22,6 +22,7 @@
     /**
      * @since 2.8.9
      */
+    private final static ObjectIdInfo EMPTY = new ObjectIdInfo(PropertyName.NO_NAME, Object.class, null, false, null);
 
     public ObjectIdInfo(PropertyName name, Class<?> scope, Class<? extends ObjectIdGenerator<?>> gen,
             Class<? extends ObjectIdResolver> resolver)
@@ -60,6 +61,9 @@
         _resolver = resolver;
     }
 
+    public static ObjectIdInfo empty() {
+        return EMPTY;
+    }
 
     public ObjectIdInfo withAlwaysAsId(boolean state) {
         if (_alwaysAsId == state) {
--- src/main/java/com/fasterxml/jackson/databind/ser/std/BeanSerializerBase.java	2023-12-05 21:09:49.579320603 +0000
+++ src/main/java/com/fasterxml/jackson/databind/ser/std/BeanSerializerBase.java	2023-12-05 21:09:52.192867573 +0000
@@ -429,9 +429,10 @@
             if (objectIdInfo == null) {
                 // no ObjectId override, but maybe ObjectIdRef?
                 if (oiw != null) {
-                    objectIdInfo = intr.findObjectReferenceInfo(accessor,
-                            new ObjectIdInfo(NAME_FOR_OBJECT_REF, null, null, null));
+                    objectIdInfo = intr.findObjectReferenceInfo(accessor, null);
+                    if (objectIdInfo != null) {
                         oiw = _objectIdWriter.withAlwaysAsId(objectIdInfo.getAlwaysAsId());
+                    }
                 }
             } else {
                 // Ugh: mostly copied from BeanDeserializerBase: but can't easily change it
