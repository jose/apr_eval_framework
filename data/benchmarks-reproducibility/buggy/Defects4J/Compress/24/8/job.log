PID: 3199146
bicycle.cs.washington.edu
Job started at Sat Dec  9 01:27:22 AM PST 2023
Running checkout, compile, and test under Java-8 on Defects4J::Compress-24. Excluding broken tests? 0. Running on the buggy version? 1.
compile_and_test.py script started at Sat Dec  9 01:27:22 AM PST 2023
No handlers could be found for logger "filelock"
Checking out 8da37729 to /tmp/Defects4J_Compress_24_java-8................. OK
Init local repository...................................................... OK
Tag post-fix revision...................................................... OK
Copy generated Ant build file.............................................. OK
Run post-checkout hook..................................................... OK
Excluding broken/flaky tests............................................... OK
Excluding broken/flaky tests............................................... OK
Initialize fixed program version........................................... OK
Apply patch................................................................ OK
Initialize buggy program version........................................... OK
Diff 8da37729:c2376685..................................................... OK
Apply patch................................................................ OK
Tag pre-fix revision....................................................... OK
Check out program version: Compress-24b.................................... OK
Checkout Defects4J_Compress_24
Compile Defects4J_Compress_24
Run tests on Defects4J_Compress_24
All tests:
testCompareBA(org.apache.commons.compress.ArchiveUtilsTest)
testAsciiConversions(org.apache.commons.compress.ArchiveUtilsTest)
testCompareAscii(org.apache.commons.compress.ArchiveUtilsTest)
testTarGzip(org.apache.commons.compress.ChainingTestCase)
testTarBzip2(org.apache.commons.compress.ChainingTestCase)
testDetection(org.apache.commons.compress.DetectArchiverTestCase)
testEmptyJarArchive(org.apache.commons.compress.DetectArchiverTestCase)
testEmptyZipArchive(org.apache.commons.compress.DetectArchiverTestCase)
testDetectionNotArchive(org.apache.commons.compress.DetectArchiverTestCase)
testCOMPRESS117(org.apache.commons.compress.DetectArchiverTestCase)
testEmptyCpioArchive(org.apache.commons.compress.DetectArchiverTestCase)
testDetection(org.apache.commons.compress.DetectCompressorTestCase)
testWriteJar(org.apache.commons.compress.IOMethodsTest)
testWriteTar(org.apache.commons.compress.IOMethodsTest)
testWriteZip(org.apache.commons.compress.IOMethodsTest)
testWriteCpio(org.apache.commons.compress.IOMethodsTest)
testReadCpio(org.apache.commons.compress.IOMethodsTest)
testReadJar(org.apache.commons.compress.IOMethodsTest)
testReadTar(org.apache.commons.compress.IOMethodsTest)
testReadZip(org.apache.commons.compress.IOMethodsTest)
testWriteAr(org.apache.commons.compress.IOMethodsTest)
testReadAr(org.apache.commons.compress.IOMethodsTest)
testArDelete(org.apache.commons.compress.archivers.ArTestCase)
testArUnarchive(org.apache.commons.compress.archivers.ArTestCase)
testFileEntryFromFile(org.apache.commons.compress.archivers.ArTestCase)
testArArchiveCreation(org.apache.commons.compress.archivers.ArTestCase)
testExplicitFileEntry(org.apache.commons.compress.archivers.ArTestCase)
testCallSequenceAr(org.apache.commons.compress.archivers.ArchiveOutputStreamTest)
testCallSequenceCpio(org.apache.commons.compress.archivers.ArchiveOutputStreamTest)
testFinish(org.apache.commons.compress.archivers.ArchiveOutputStreamTest)
testOptionalFinish(org.apache.commons.compress.archivers.ArchiveOutputStreamTest)
testCallSequenceJar(org.apache.commons.compress.archivers.ArchiveOutputStreamTest)
testCallSequenceTar(org.apache.commons.compress.archivers.ArchiveOutputStreamTest)
testCallSequenceZip(org.apache.commons.compress.archivers.ArchiveOutputStreamTest)
skipsPK00Prefix(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)
aiffFilesAreNoTARs(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)
shortTextFilesAreNoTARs(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)
testCOMPRESS209(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)
testCpioUnarchive(org.apache.commons.compress.archivers.CpioTestCase)
testFileEntryFromFile(org.apache.commons.compress.archivers.CpioTestCase)
testDirectoryEntryFromFile(org.apache.commons.compress.archivers.CpioTestCase)
testExplicitDirectoryEntry(org.apache.commons.compress.archivers.CpioTestCase)
testExplicitFileEntry(org.apache.commons.compress.archivers.CpioTestCase)
testCpioArchiveCreation(org.apache.commons.compress.archivers.CpioTestCase)
testArchiveDetection(org.apache.commons.compress.archivers.DumpTestCase)
testCompressedDumpUnarchiveAll(org.apache.commons.compress.archivers.DumpTestCase)
testDumpUnarchiveAll(org.apache.commons.compress.archivers.DumpTestCase)
testCheckArchive(org.apache.commons.compress.archivers.DumpTestCase)
testCheckCompressedArchive(org.apache.commons.compress.archivers.DumpTestCase)
testCompressedArchiveDetection(org.apache.commons.compress.archivers.DumpTestCase)
testMessageWhenArchiverNameIsNull_1(org.apache.commons.compress.archivers.ExceptionMessageTest)
testMessageWhenArchiverNameIsNull_2(org.apache.commons.compress.archivers.ExceptionMessageTest)
testMessageWhenOutputStreamIsNull(org.apache.commons.compress.archivers.ExceptionMessageTest)
testMessageWhenInputStreamIsNull(org.apache.commons.compress.archivers.ExceptionMessageTest)
testJarUnarchive(org.apache.commons.compress.archivers.JarTestCase)
testJarArchiveCreation(org.apache.commons.compress.archivers.JarTestCase)
testJarUnarchiveAll(org.apache.commons.compress.archivers.JarTestCase)
testArchive(org.apache.commons.compress.archivers.LongPathTest)
testArchive(org.apache.commons.compress.archivers.LongPathTest)
testArchive(org.apache.commons.compress.archivers.LongPathTest)
testArchive(org.apache.commons.compress.archivers.LongPathTest)
testArchive(org.apache.commons.compress.archivers.LongPathTest)
testArchive(org.apache.commons.compress.archivers.LongPathTest)
testArchive(org.apache.commons.compress.archivers.LongPathTest)
testArchive(org.apache.commons.compress.archivers.LongPathTest)
testArchive(org.apache.commons.compress.archivers.LongPathTest)
testArchive(org.apache.commons.compress.archivers.LongPathTest)
testArchive(org.apache.commons.compress.archivers.LongPathTest)
testArchive(org.apache.commons.compress.archivers.LongPathTest)
testArchive(org.apache.commons.compress.archivers.LongPathTest)
testArchive(org.apache.commons.compress.archivers.LongPathTest)
testArchive(org.apache.commons.compress.archivers.LongPathTest)
testArchive(org.apache.commons.compress.archivers.LongPathTest)
testArchive(org.apache.commons.compress.archivers.LongPathTest)
testArchive(org.apache.commons.compress.archivers.LongPathTest)
testArchive(org.apache.commons.compress.archivers.LongPathTest)
testArchive(org.apache.commons.compress.archivers.LongPathTest)
testArchive(org.apache.commons.compress.archivers.LongPathTest)
testArchive(org.apache.commons.compress.archivers.LongPathTest)
testArchive(org.apache.commons.compress.archivers.LongPathTest)
testArchive(org.apache.commons.compress.archivers.LongPathTest)
testArchive(org.apache.commons.compress.archivers.LongPathTest)
testSevenZArchiveCreationUsingCopy(org.apache.commons.compress.archivers.SevenZTestCase)
testSevenZArchiveCreationUsingBZIP2(org.apache.commons.compress.archivers.SevenZTestCase)
testSevenZArchiveCreationUsingLZMA2(org.apache.commons.compress.archivers.SevenZTestCase)
testSevenZArchiveCreationUsingDeflate(org.apache.commons.compress.archivers.SevenZTestCase)
testTarUnarchive(org.apache.commons.compress.archivers.TarTestCase)
testFileEntryFromFile(org.apache.commons.compress.archivers.TarTestCase)
testDirectoryEntryFromFile(org.apache.commons.compress.archivers.TarTestCase)
testTarArchiveLongNameCreation(org.apache.commons.compress.archivers.TarTestCase)
testTarArchiveCreation(org.apache.commons.compress.archivers.TarTestCase)
testExplicitDirectoryEntry(org.apache.commons.compress.archivers.TarTestCase)
testCOMPRESS114(org.apache.commons.compress.archivers.TarTestCase)
testCOMPRESS178(org.apache.commons.compress.archivers.TarTestCase)
testExplicitFileEntry(org.apache.commons.compress.archivers.TarTestCase)
testSkipsPK00Prefix(org.apache.commons.compress.archivers.ZipTestCase)
testZipUnarchive(org.apache.commons.compress.archivers.ZipTestCase)
testFileEntryFromFile(org.apache.commons.compress.archivers.ZipTestCase)
testDirectoryEntryFromFile(org.apache.commons.compress.archivers.ZipTestCase)
testSkipEntryWithUnsupportedCompressionMethod(org.apache.commons.compress.archivers.ZipTestCase)
testExplicitDirectoryEntry(org.apache.commons.compress.archivers.ZipTestCase)
testSupportedCompressionMethod(org.apache.commons.compress.archivers.ZipTestCase)
testListAllFilesWithNestedArchive(org.apache.commons.compress.archivers.ZipTestCase)
testExplicitFileEntry(org.apache.commons.compress.archivers.ZipTestCase)
testZipArchiveCreation(org.apache.commons.compress.archivers.ZipTestCase)
testReadLongNamesBSD(org.apache.commons.compress.archivers.ar.ArArchiveInputStreamTest)
testReadLongNamesGNU(org.apache.commons.compress.archivers.ar.ArArchiveInputStreamTest)
testLongFileNamesCauseExceptionByDefault(org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest)
testLongFileNamesWorkUsingBSDDialect(org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest)
testReadingOfAttributesUnixVersion(org.apache.commons.compress.archivers.arj.ArjArchiveInputStreamTest)
testArjUnarchive(org.apache.commons.compress.archivers.arj.ArjArchiveInputStreamTest)
testReadingOfAttributesDosVersion(org.apache.commons.compress.archivers.arj.ArjArchiveInputStreamTest)
testCpioUnarchive(org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest)
testCpioUnarchiveCreatedByRedlineRpm(org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest)
testWriteOldBinary(org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest)
oldBinMagic2ByteArraySwapped(org.apache.commons.compress.archivers.cpio.CpioUtilTest)
oldBinMagicFromByteArraySwapped(org.apache.commons.compress.archivers.cpio.CpioUtilTest)
oldBinMagicFromByteArrayNotSwapped(org.apache.commons.compress.archivers.cpio.CpioUtilTest)
oldBinMagic2ByteArrayNotSwapped(org.apache.commons.compress.archivers.cpio.CpioUtilTest)
publicNameRemovesLeadingDotSlash(org.apache.commons.compress.archivers.dump.DumpArchiveEntryTest)
publicNameAddsTrailingSlashForDirectories(org.apache.commons.compress.archivers.dump.DumpArchiveEntryTest)
testNotADumpArchive(org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest)
testConsumesArchiveCompletely(org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest)
testNotADumpArchiveButBigEnough(org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest)
convert16(org.apache.commons.compress.archivers.dump.DumpArchiveUtilTest)
convert32(org.apache.commons.compress.archivers.dump.DumpArchiveUtilTest)
convert64(org.apache.commons.compress.archivers.dump.DumpArchiveUtilTest)
testJarMarker(org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest)
testReading(org.apache.commons.compress.archivers.memory.MemoryArchiveTestCase)
shouldThrowIfNoCreationDateIsSet(org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntryTest)
shouldThrowIfNoAccessDateIsSet(org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntryTest)
shouldThrowIfNoLastModifiedDateIsSet(org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntryTest)
test7zUnarchive(org.apache.commons.compress.archivers.sevenz.SevenZFileTest)
testHelloWorldHeaderCompressionOffLZMA2(org.apache.commons.compress.archivers.sevenz.SevenZFileTest)
testCompressedHeaderWithNonDefaultDictionarySize(org.apache.commons.compress.archivers.sevenz.SevenZFileTest)
testAllEmptyFilesArchive(org.apache.commons.compress.archivers.sevenz.SevenZFileTest)
test7zDecryptUnarchive(org.apache.commons.compress.archivers.sevenz.SevenZFileTest)
testEncryptedArchiveRequiresPassword(org.apache.commons.compress.archivers.sevenz.SevenZFileTest)
test7zDeflateUnarchive(org.apache.commons.compress.archivers.sevenz.SevenZFileTest)
testHelloWorldHeaderCompressionOffCopy(org.apache.commons.compress.archivers.sevenz.SevenZFileTest)
testSevenEmptyFiles(org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest)
testEightFilesSomeNotEmpty(org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest)
testSixEmptyFiles(org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest)
testEightEmptyFiles(org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest)
testNineEmptyFiles(org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest)
testSixFilesSomeNotEmpty(org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest)
testCantFinishTwice(org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest)
testTwentyNineEmptyFiles(org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest)
testNineFilesSomeNotEmpty(org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest)
testDirectoriesOnly(org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest)
testTwentyNineFilesSomeNotEmpty(org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest)
testDirectoriesAndEmptyFiles(org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest)
testSevenFilesSomeNotEmpty(org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest)
testOldGNU(org.apache.commons.compress.archivers.tar.SparseFilesTest)
testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)
testLinkFlagConstructorWithPreserve(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)
testFileSystemRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)
testLinkFlagConstructorWithFileFlag(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)
testMaxFileSize(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)
testLinkFlagConstructor(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)
workaroundForBrokenTimeHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)
shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)
readsArchiveCompletely_COMPRESS245(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)
readSimplePaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)
datePriorToEpochInGNUFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)
shouldUseSpecifiedEncodingWhenReadingGNULongNames(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)
testCompress197(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)
datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)
readPaxHeaderWithEmbeddedNewline(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)
readNonAsciiPaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)
testWriteLongDirectoryNameGnuMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)
testPaxHeadersWithLength99(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)
testWriteSimplePaxHeaders(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)
testWriteLongDirectoryNamePosixMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)
testWriteLongLinkNameGnuMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)
testWriteLongLinkNameTruncateMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)
testWriteLongDirectoryNameTruncateMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)
testWriteLongLinkNamePosixMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)
testCount(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)
testWriteLongFileNamePosixMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)
testPadsOutputToFullBlockLength(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)
testBigNumberStarMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)
testMaxFileSizeError(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)
testOldEntryStarMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)
testRoundtripWith67CharFileNameGnu(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)
testWriteNonAsciiDirectoryNamePosixMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)
testBigNumberPosixMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)
testOldEntryPosixMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)
testOldEntryError(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)
testWriteLongDirectoryNameErrorMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)
testRoundtripWith67CharFileNamePosix(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)
testWriteLongLinkNameErrorMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)
testWriteNonAsciiPathNamePaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)
testWriteNonAsciiLinkPathNamePaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)
testPaxHeadersWithLength101(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)
testRoundTripOctalOrBinary8(org.apache.commons.compress.archivers.tar.TarUtilsTest)
testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)
testName(org.apache.commons.compress.archivers.tar.TarUtilsTest)
testReadNegativeBinary12Byte(org.apache.commons.compress.archivers.tar.TarUtilsTest)
testReadNegativeBinary8Byte(org.apache.commons.compress.archivers.tar.TarUtilsTest)
testWriteNegativeBinary8Byte(org.apache.commons.compress.archivers.tar.TarUtilsTest)
testRoundTripNames(org.apache.commons.compress.archivers.tar.TarUtilsTest)
testRoundTripOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)
testVerifyHeaderCheckSum(org.apache.commons.compress.archivers.tar.TarUtilsTest)
testRoundTripOctalOrBinary12(org.apache.commons.compress.archivers.tar.TarUtilsTest)
testOverflow(org.apache.commons.compress.archivers.tar.TarUtilsTest)
testParseOctalInvalid(org.apache.commons.compress.archivers.tar.TarUtilsTest)
testRoundEncoding(org.apache.commons.compress.archivers.tar.TarUtilsTest)
testNegative(org.apache.commons.compress.archivers.tar.TarUtilsTest)
testTrailers(org.apache.commons.compress.archivers.tar.TarUtilsTest)
testClone(org.apache.commons.compress.archivers.zip.AsiExtraFieldTest)
testModes(org.apache.commons.compress.archivers.zip.AsiExtraFieldTest)
testContent(org.apache.commons.compress.archivers.zip.AsiExtraFieldTest)
testReparse(org.apache.commons.compress.archivers.zip.AsiExtraFieldTest)
testDecode(org.apache.commons.compress.archivers.zip.BinaryTreeTest)
testNextByteFromEmptyStream(org.apache.commons.compress.archivers.zip.BitStreamTest)
testEmptyStream(org.apache.commons.compress.archivers.zip.BitStreamTest)
testReadAlignedBytes(org.apache.commons.compress.archivers.zip.BitStreamTest)
testStream(org.apache.commons.compress.archivers.zip.BitStreamTest)
testNextByte(org.apache.commons.compress.archivers.zip.BitStreamTest)
testCopy(org.apache.commons.compress.archivers.zip.CircularBufferTest)
testPutAndGet(org.apache.commons.compress.archivers.zip.CircularBufferTest)
testReadPasswordEncryptedEntryViaStream(org.apache.commons.compress.archivers.zip.EncryptedArchiveTest)
testReadPasswordEncryptedEntryViaZipFile(org.apache.commons.compress.archivers.zip.EncryptedArchiveTest)
testArchiveWithImplodeCompression4K2Trees(org.apache.commons.compress.archivers.zip.ExplodeSupportTest)
testZipStreamWithImplodeCompression8K3Trees(org.apache.commons.compress.archivers.zip.ExplodeSupportTest)
testTikaTestArchive(org.apache.commons.compress.archivers.zip.ExplodeSupportTest)
testArchiveWithImplodeCompression8K3Trees(org.apache.commons.compress.archivers.zip.ExplodeSupportTest)
testZipStreamWithImplodeCompression4K2Trees(org.apache.commons.compress.archivers.zip.ExplodeSupportTest)
testTikaTestStream(org.apache.commons.compress.archivers.zip.ExplodeSupportTest)
testMergeWithUnparseableData(org.apache.commons.compress.archivers.zip.ExtraFieldUtilsTest)
testMerge(org.apache.commons.compress.archivers.zip.ExtraFieldUtilsTest)
testParse(org.apache.commons.compress.archivers.zip.ExtraFieldUtilsTest)
testParseWithRead(org.apache.commons.compress.archivers.zip.ExtraFieldUtilsTest)
testParseWithSkip(org.apache.commons.compress.archivers.zip.ExtraFieldUtilsTest)
testDataDescriptor(org.apache.commons.compress.archivers.zip.GeneralPurposeBitTest)
testStringEncryption(org.apache.commons.compress.archivers.zip.GeneralPurposeBitTest)
testParseEdgeCases(org.apache.commons.compress.archivers.zip.GeneralPurposeBitTest)
testLanguageEncodingFlag(org.apache.commons.compress.archivers.zip.GeneralPurposeBitTest)
testDefaults(org.apache.commons.compress.archivers.zip.GeneralPurposeBitTest)
testEncryption(org.apache.commons.compress.archivers.zip.GeneralPurposeBitTest)
testRead7ZipMultiVolumeArchiveForStream(org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest)
testRead7ZipMultiVolumeArchiveForFile(org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest)
testZipFileReadsUnicodeFields(org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest)
testCP437FileRoundtripImplicitUnicodeExtra(org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest)
testUtf8FileRoundtripImplicitUnicodeExtra(org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest)
testRead7ZipArchiveForStream(org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest)
testCP437FileRoundtripExplicitUnicodeExtra(org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest)
testRead7ZipArchive(org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest)
testUtf8FileRoundtripExplicitUnicodeExtra(org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest)
testASCIIFileRoundtripImplicitUnicodeExtra(org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest)
testReadWinZipArchiveForStream(org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest)
testUtf8FileRoundtripNoEFSImplicitUnicodeExtra(org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest)
testZipArchiveInputStreamReadsUnicodeFields(org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest)
testASCIIFileRoundtripExplicitUnicodeExtra(org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest)
testReadWinZipArchive(org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest)
testUtf8FileRoundtripNoEFSExplicitUnicodeExtra(org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest)
testUtf8Interoperability(org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest)
testRawNameReadFromZipFile(org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest)
testRawNameReadFromStream(org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest)
testMisc(org.apache.commons.compress.archivers.zip.X7875_NewUnixTest)
testSampleFile(org.apache.commons.compress.archivers.zip.X7875_NewUnixTest)
testTrimLeadingZeroesForceMinLength4(org.apache.commons.compress.archivers.zip.X7875_NewUnixTest)
testParseReparse(org.apache.commons.compress.archivers.zip.X7875_NewUnixTest)
testGetHeaderId(org.apache.commons.compress.archivers.zip.X7875_NewUnixTest)
testReadCDSizesAndOffset(org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraFieldTest)
testWriteCDSizeOffsetAndDisk(org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraFieldTest)
testReadLFHSizesOnly(org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraFieldTest)
testWriteCDOnlySizes(org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraFieldTest)
testWriteCDSizeAndOffset(org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraFieldTest)
testWriteCDSizeAndDisk(org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraFieldTest)
testReadCDSomethingAndDisk(org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraFieldTest)
testReparseCDSingleEightByteData(org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraFieldTest)
testReadLFHSizesAndDisk(org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraFieldTest)
testReadCDSizesOffsetAndDisk(org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraFieldTest)
testReadLFHSizesAndOffset(org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraFieldTest)
testReadLFHSizesOffsetAndDisk(org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraFieldTest)
testCompressionMethod(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)
testNullCommentEqualsEmptyComment(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)
testExtraFieldMerging(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)
testExtraFields(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)
testUnixMode(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)
testAddAsFirstExtraField(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)
testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)
shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)
testUnshrinkEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)
properUseOfInflater(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)
winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)
shouldReadNestedZip(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)
testBIToBytes(org.apache.commons.compress.archivers.zip.ZipEightByteIntegerTest)
testSign(org.apache.commons.compress.archivers.zip.ZipEightByteIntegerTest)
testBIFromBytes(org.apache.commons.compress.archivers.zip.ZipEightByteIntegerTest)
testLongFromBytes(org.apache.commons.compress.archivers.zip.ZipEightByteIntegerTest)
testLongToBytes(org.apache.commons.compress.archivers.zip.ZipEightByteIntegerTest)
testEquals(org.apache.commons.compress.archivers.zip.ZipEightByteIntegerTest)
testNioCp1252Encoding(org.apache.commons.compress.archivers.zip.ZipEncodingTest)
testSimpleCp437Encoding(org.apache.commons.compress.archivers.zip.ZipEncodingTest)
testSimpleCp850Encoding(org.apache.commons.compress.archivers.zip.ZipEncodingTest)
testSkipsPK00Prefix(org.apache.commons.compress.archivers.zip.ZipFileTest)
testReadingOfStoredEntry(org.apache.commons.compress.archivers.zip.ZipFileTest)
testDuplicateEntry(org.apache.commons.compress.archivers.zip.ZipFileTest)
testPhysicalOrder(org.apache.commons.compress.archivers.zip.ZipFileTest)
testExcessDataInZip64ExtraField(org.apache.commons.compress.archivers.zip.ZipFileTest)
testCDOrder(org.apache.commons.compress.archivers.zip.ZipFileTest)
testUnshrinking(org.apache.commons.compress.archivers.zip.ZipFileTest)
testUnixSymlinkSampleFile(org.apache.commons.compress.archivers.zip.ZipFileTest)
testWinzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipFileTest)
testDoubleClose(org.apache.commons.compress.archivers.zip.ZipFileTest)
testToBytes(org.apache.commons.compress.archivers.zip.ZipLongTest)
testClone(org.apache.commons.compress.archivers.zip.ZipLongTest)
testSign(org.apache.commons.compress.archivers.zip.ZipLongTest)
testFromBytes(org.apache.commons.compress.archivers.zip.ZipLongTest)
testEquals(org.apache.commons.compress.archivers.zip.ZipLongTest)
testToBytes(org.apache.commons.compress.archivers.zip.ZipShortTest)
testClone(org.apache.commons.compress.archivers.zip.ZipShortTest)
testSign(org.apache.commons.compress.archivers.zip.ZipShortTest)
testFromBytes(org.apache.commons.compress.archivers.zip.ZipShortTest)
testEquals(org.apache.commons.compress.archivers.zip.ZipShortTest)
testSignedByteToUnsignedInt(org.apache.commons.compress.archivers.zip.ZipUtilTest)
testUnsignedIntToSignedByte(org.apache.commons.compress.archivers.zip.ZipUtilTest)
testZipLong(org.apache.commons.compress.archivers.zip.ZipUtilTest)
testMinTime(org.apache.commons.compress.archivers.zip.ZipUtilTest)
testReverse(org.apache.commons.compress.archivers.zip.ZipUtilTest)
testLongToBig(org.apache.commons.compress.archivers.zip.ZipUtilTest)
testBigToLong(org.apache.commons.compress.archivers.zip.ZipUtilTest)
testAdjustToLong(org.apache.commons.compress.archivers.zip.ZipUtilTest)
testDeleteFile2(org.apache.commons.compress.changes.ChangeSetTestCase)
testAddDeleteToOneFileArchive(org.apache.commons.compress.changes.ChangeSetTestCase)
testDeleteFromAndAddToZipUsingZipFilePerform(org.apache.commons.compress.changes.ChangeSetTestCase)
testAddToEmptyArchive(org.apache.commons.compress.changes.ChangeSetTestCase)
testRenameAndDelete(org.apache.commons.compress.changes.ChangeSetTestCase)
testDeleteAddToOneFileArchive(org.apache.commons.compress.changes.ChangeSetTestCase)
testAddAllreadyExistingWithReplaceFalse(org.apache.commons.compress.changes.ChangeSetTestCase)
testChangeSetResults(org.apache.commons.compress.changes.ChangeSetTestCase)
testDeleteFromAndAddToAr(org.apache.commons.compress.changes.ChangeSetTestCase)
testAddMoveDelete(org.apache.commons.compress.changes.ChangeSetTestCase)
testDeleteFromAr(org.apache.commons.compress.changes.ChangeSetTestCase)
testDeleteAddDelete(org.apache.commons.compress.changes.ChangeSetTestCase)
testDeleteDir(org.apache.commons.compress.changes.ChangeSetTestCase)
testAddDeleteAdd(org.apache.commons.compress.changes.ChangeSetTestCase)
testAddChangeTwiceWithoutReplace(org.apache.commons.compress.changes.ChangeSetTestCase)
testDeletePlusAddSame(org.apache.commons.compress.changes.ChangeSetTestCase)
testDeleteDir2(org.apache.commons.compress.changes.ChangeSetTestCase)
testDeleteDir3(org.apache.commons.compress.changes.ChangeSetTestCase)
testDeleteFile(org.apache.commons.compress.changes.ChangeSetTestCase)
testAddAllreadyExistingWithReplaceTrue(org.apache.commons.compress.changes.ChangeSetTestCase)
testDeleteFromJar(org.apache.commons.compress.changes.ChangeSetTestCase)
testDeleteFromTar(org.apache.commons.compress.changes.ChangeSetTestCase)
testDeleteFromZip(org.apache.commons.compress.changes.ChangeSetTestCase)
testDeletePlusAdd(org.apache.commons.compress.changes.ChangeSetTestCase)
testDeleteFromAndAddToJar(org.apache.commons.compress.changes.ChangeSetTestCase)
testDeleteFromAndAddToTar(org.apache.commons.compress.changes.ChangeSetTestCase)
testDeleteFromAndAddToZip(org.apache.commons.compress.changes.ChangeSetTestCase)
testAddChangeTwice(org.apache.commons.compress.changes.ChangeSetTestCase)
testBzip2Unarchive(org.apache.commons.compress.compressors.BZip2TestCase)
testBzipCreation(org.apache.commons.compress.compressors.BZip2TestCase)
testConcatenatedStreamsReadFirstOnly(org.apache.commons.compress.compressors.BZip2TestCase)
testConcatenatedStreamsReadFully(org.apache.commons.compress.compressors.BZip2TestCase)
testCOMPRESS131(org.apache.commons.compress.compressors.BZip2TestCase)
testGetCompressedFilename(org.apache.commons.compress.compressors.BZip2UtilsTestCase)
testIsCompressedFilename(org.apache.commons.compress.compressors.BZip2UtilsTestCase)
testGetUncompressedFilename(org.apache.commons.compress.compressors.BZip2UtilsTestCase)
testDefaultExtractionViaFactoryAutodetection(org.apache.commons.compress.compressors.FramedSnappyTestCase)
testDefaultExtraction(org.apache.commons.compress.compressors.FramedSnappyTestCase)
testDefaultExtractionViaFactory(org.apache.commons.compress.compressors.FramedSnappyTestCase)
testInteroperabilityWithGzipCompressorInputStream(org.apache.commons.compress.compressors.GZipTestCase)
testInteroperabilityWithGZIPInputStream(org.apache.commons.compress.compressors.GZipTestCase)
testMetadataRoundTrip(org.apache.commons.compress.compressors.GZipTestCase)
testGzipUnarchive(org.apache.commons.compress.compressors.GZipTestCase)
testGzipCreation(org.apache.commons.compress.compressors.GZipTestCase)
testOverWrite(org.apache.commons.compress.compressors.GZipTestCase)
testInvalidCompressionLevel(org.apache.commons.compress.compressors.GZipTestCase)
testExtraFlagsFastestCompression(org.apache.commons.compress.compressors.GZipTestCase)
testConcatenatedStreamsReadFirstOnly(org.apache.commons.compress.compressors.GZipTestCase)
testConcatenatedStreamsReadFully(org.apache.commons.compress.compressors.GZipTestCase)
testCorruptedInput(org.apache.commons.compress.compressors.GZipTestCase)
testExtraFlagsDefaultCompression(org.apache.commons.compress.compressors.GZipTestCase)
testExtraFlagsBestCompression(org.apache.commons.compress.compressors.GZipTestCase)
testGetCompressedFilename(org.apache.commons.compress.compressors.GzipUtilsTestCase)
testIsCompressedFilename(org.apache.commons.compress.compressors.GzipUtilsTestCase)
testGetUncompressedFilename(org.apache.commons.compress.compressors.GzipUtilsTestCase)
testLZMAUnarchive(org.apache.commons.compress.compressors.LZMATestCase)
testInputStreamMethods(org.apache.commons.compress.compressors.Pack200TestCase)
testJarArchiveCreationTempFile(org.apache.commons.compress.compressors.Pack200TestCase)
testJarUnarchiveAllInMemory(org.apache.commons.compress.compressors.Pack200TestCase)
testJarArchiveCreationInMemory(org.apache.commons.compress.compressors.Pack200TestCase)
testJarUnarchiveAllFileArgInMemory(org.apache.commons.compress.compressors.Pack200TestCase)
testBadSignature(org.apache.commons.compress.compressors.Pack200TestCase)
testJarUnarchiveAllFileTempFile(org.apache.commons.compress.compressors.Pack200TestCase)
testOutputStreamMethods(org.apache.commons.compress.compressors.Pack200TestCase)
testShortSignature(org.apache.commons.compress.compressors.Pack200TestCase)
testGoodSignature(org.apache.commons.compress.compressors.Pack200TestCase)
testJarUnarchiveAllTempFile(org.apache.commons.compress.compressors.Pack200TestCase)
testXZCreation(org.apache.commons.compress.compressors.XZTestCase)
testConcatenatedStreamsReadFirstOnly(org.apache.commons.compress.compressors.XZTestCase)
testConcatenatedStreamsReadFully(org.apache.commons.compress.compressors.XZTestCase)
testXZUnarchive(org.apache.commons.compress.compressors.XZTestCase)
testGetCompressedFilename(org.apache.commons.compress.compressors.XZUtilsTestCase)
testIsCompressedFilename(org.apache.commons.compress.compressors.XZUtilsTestCase)
testGetUncompressedFilename(org.apache.commons.compress.compressors.XZUtilsTestCase)
testZUnarchiveViaFactory(org.apache.commons.compress.compressors.ZTestCase)
testZUnarchive(org.apache.commons.compress.compressors.ZTestCase)
testSortFixture2MainSort(org.apache.commons.compress.compressors.bzip2.BlockSortTest)
testSortFixture2FallbackSort(org.apache.commons.compress.compressors.bzip2.BlockSortTest)
testFallbackSort(org.apache.commons.compress.compressors.bzip2.BlockSortTest)
testSortFixture(org.apache.commons.compress.compressors.bzip2.BlockSortTest)
testSortFixture2(org.apache.commons.compress.compressors.bzip2.BlockSortTest)
testSortFixtureMainSort(org.apache.commons.compress.compressors.bzip2.BlockSortTest)
testSortFixtureFallbackSort(org.apache.commons.compress.compressors.bzip2.BlockSortTest)
testPartialReadTruncatedData(org.apache.commons.compress.compressors.bzip2.PythonTruncatedBzip2Test)
testTruncatedData(org.apache.commons.compress.compressors.bzip2.PythonTruncatedBzip2Test)
testNormalizeInPlace(org.apache.commons.compress.compressors.pack200.Pack200UtilsTest)
testNormalize(org.apache.commons.compress.compressors.pack200.Pack200UtilsTest)
testRemainingChunkTypes(org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest)
testUnskippableChunk(org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest)
testAvailable(org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest)
testLoremIpsum(org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest)
testMatches(org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest)
testChecksumUnmasking(org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest)
testUtf16(org.apache.commons.compress.utils.CharsetsTest)
testUtf8(org.apache.commons.compress.utils.CharsetsTest)
testUsAscii(org.apache.commons.compress.utils.CharsetsTest)
testUtf16Be(org.apache.commons.compress.utils.CharsetsTest)
testUtf16Le(org.apache.commons.compress.utils.CharsetsTest)
testToCharset(org.apache.commons.compress.utils.CharsetsTest)
testIso8859_1(org.apache.commons.compress.utils.CharsetsTest)
output(org.apache.commons.compress.utils.CountingStreamTest)
input(org.apache.commons.compress.utils.CountingStreamTest)

Failing tests:
--- org.apache.commons.compress.archivers.tar.TarUtilsTest::testParseOctal
java.lang.IllegalArgumentException: Invalid byte 55 at offset 11 in '777777777777' len=12
	at org.apache.commons.compress.archivers.tar.TarUtils.parseOctal(TarUtils.java:132)
	at org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(TarUtilsTest.java:53)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)

/scratch/jose/repair-them-all/apr_eval_framework/data/benchmarks-reproducibility/checkout_and_compile_and_metadata_and_test.py script finished at Sat Dec  9 01:30:37 AM PST 2023
Job finished at Sat Dec  9 01:30:37 AM PST 2023
DONE!
