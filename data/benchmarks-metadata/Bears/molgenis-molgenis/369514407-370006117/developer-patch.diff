diff --git a/molgenis-data-import/src/main/java/org/molgenis/data/importer/DataPersisterImpl.java b/molgenis-data-import/src/main/java/org/molgenis/data/importer/DataPersisterImpl.java
index f1374dbe6..e20630a42 100644
--- a/molgenis-data-import/src/main/java/org/molgenis/data/importer/DataPersisterImpl.java
+++ b/molgenis-data-import/src/main/java/org/molgenis/data/importer/DataPersisterImpl.java
@@ -2,10 +2,7 @@ package org.molgenis.data.importer;
 
 import com.google.common.collect.ImmutableMap;
 import com.google.common.collect.Iterators;
-import org.molgenis.data.DataService;
-import org.molgenis.data.Entity;
-import org.molgenis.data.Repository;
-import org.molgenis.data.UnknownEntityException;
+import org.molgenis.data.*;
 import org.molgenis.data.meta.EntityTypeDependencyResolver;
 import org.molgenis.data.meta.MetaDataService;
 import org.molgenis.data.meta.MetaDataServiceImpl.EntityTypeWithoutMappedByAttributes;
@@ -83,6 +80,12 @@ public class DataPersisterImpl implements DataPersister
 			EntityType persistedEntityType = persistEntityTypeFirstPass(entityType, metadataMode);
 			if (dataProvider.hasEntities(entityType))
 			{
+				if (entityType.isAbstract())
+				{
+					throw new MolgenisDataException(
+							format("Abstract entity type '%s' with id '%s' cannot contain entities",
+									entityType.getLabel(), entityType.getId()));
+				}
 				Stream<Entity> entities = dataProvider.getEntities(entityType);
 				long nrPersistedEntities = persistEntitiesFirstPass(persistedEntityType, entities, dataMode);
 				persistResultBuilder.put(entityType.getId(), nrPersistedEntities);
diff --git a/molgenis-data-import/src/test/java/org/molgenis/data/importer/DataPersisterImplTest.java b/molgenis-data-import/src/test/java/org/molgenis/data/importer/DataPersisterImplTest.java
index 49e861464..ba56741b7 100644
--- a/molgenis-data-import/src/test/java/org/molgenis/data/importer/DataPersisterImplTest.java
+++ b/molgenis-data-import/src/test/java/org/molgenis/data/importer/DataPersisterImplTest.java
@@ -7,6 +7,7 @@ import org.mockito.Mock;
 import org.mockito.quality.Strictness;
 import org.molgenis.data.DataService;
 import org.molgenis.data.Entity;
+import org.molgenis.data.MolgenisDataException;
 import org.molgenis.data.Repository;
 import org.molgenis.data.importer.DataPersister.DataMode;
 import org.molgenis.data.importer.DataPersister.MetadataMode;
@@ -137,6 +138,15 @@ public class DataPersisterImplTest extends AbstractMockitoTest
 		verifyNoMoreInteractions(metaDataService, dataService);
 	}
 
+	@SuppressWarnings("unchecked")
+	@Test(expectedExceptions = MolgenisDataException.class, expectedExceptionsMessageRegExp = "Abstract entity type 'Entity type #0' with id 'entityTypeId0' cannot contain entities")
+	public void testPersistMetaNoneDataAddAbstractEntityType()
+	{
+		when(entityType0.getLabel()).thenReturn("Entity type #0");
+		when(entityType0.isAbstract()).thenReturn(true);
+		dataPersisterImpl.persist(dataProvider, MetadataMode.NONE, DataMode.ADD);
+	}
+
 	@SuppressWarnings("unchecked")
 	@Test
 	public void testPersistMetaNoneDataUpdate()
